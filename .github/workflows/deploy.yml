name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Create .env.local
        run: |
          cat > .env.local << EOL
          NEXT_PUBLIC_INFURA_API_KEY=${{ secrets.NEXT_PUBLIC_INFURA_API_KEY || 'cc0c8013b1e044dcba79d4f7ec3b2ba1' }}
          NEXT_PUBLIC_CONTRACT_ADDRESS=0xb502e19e62eE8D5Ee1F179b489d832EAb328Bc99
          NEXT_PUBLIC_BASE_CHAINID=8453
          NEXT_PUBLIC_ADRIAN_TOKEN_ADDRESS=${{ secrets.NEXT_PUBLIC_ADRIAN_TOKEN_ADDRESS || '' }}
          EOL

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Setup fallback and diagnostic files
        run: |
          # Crear archivo .nojekyll para evitar procesamiento de Jekyll
          touch out/.nojekyll
          
          # Copiar archivos de public a la carpeta out
          cp -R public/* out/ || true
          
          # Copiar el índice de la raíz como alternativa
          cp index.html out/index.html
          
          # Asegurar que los archivos existen
          touch out/404.html
          touch out/fallback.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
          force_orphan: true
          cname: ${{ secrets.CUSTOM_DOMAIN || '' }} 